
package de.pubflow.components.jiraConnector.wsArtifacts;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IJiraEndpoint", targetNamespace = "pubflow.de")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IJiraEndpoint {


    /**
     * 
     * @param reporter
     * @param summary
     * @param description
     * @param parameters
     * @param wfName
     * @param projectKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createIssue", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateIssue")
    @ResponseWrapper(localName = "createIssueResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateIssueResponse")
    public String createIssue(
        @WebParam(name = "projectKey", targetNamespace = "")
        String projectKey,
        @WebParam(name = "wfName", targetNamespace = "")
        String wfName,
        @WebParam(name = "summary", targetNamespace = "")
        String summary,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "parameters", targetNamespace = "")
        CreateIssue.Parameters parameters,
        @WebParam(name = "reporter", targetNamespace = "")
        String reporter);

    /**
     * 
     * @param issueTypeName
     * @param parameters
     * @param projectKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createIssueType", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateIssueType")
    @ResponseWrapper(localName = "createIssueTypeResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateIssueTypeResponse")
    public String createIssueType(
        @WebParam(name = "projectKey", targetNamespace = "")
        String projectKey,
        @WebParam(name = "issueTypeName", targetNamespace = "")
        String issueTypeName,
        @WebParam(name = "parameters", targetNamespace = "")
        CreateIssueType.Parameters parameters);

    /**
     * 
     * @param statusId
     * @param issueKey
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeStatus", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.ChangeStatus")
    @ResponseWrapper(localName = "changeStatusResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.ChangeStatusResponse")
    public boolean changeStatus(
        @WebParam(name = "issueKey", targetNamespace = "")
        String issueKey,
        @WebParam(name = "statusId", targetNamespace = "")
        String statusId);

    /**
     * 
     * @param issueKey
     * @param comment
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addIssueComment", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.AddIssueComment")
    @ResponseWrapper(localName = "addIssueCommentResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.AddIssueCommentResponse")
    public boolean addIssueComment(
        @WebParam(name = "issueKey", targetNamespace = "")
        String issueKey,
        @WebParam(name = "comment", targetNamespace = "")
        String comment);

    /**
     * 
     * @param projectKey
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStatusNames", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.GetStatusNames")
    @ResponseWrapper(localName = "getStatusNamesResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.GetStatusNamesResponse")
    public List<String> getStatusNames(
        @WebParam(name = "projectKey", targetNamespace = "")
        String projectKey);

    /**
     * 
     * @param workflowXML
     * @param steps
     * @param projectName
     * @param projectKey
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProject", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateProject")
    @ResponseWrapper(localName = "createProjectResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.CreateProjectResponse")
    public boolean createProject(
        @WebParam(name = "projectName", targetNamespace = "")
        String projectName,
        @WebParam(name = "projectKey", targetNamespace = "")
        String projectKey,
        @WebParam(name = "workflowXML", targetNamespace = "")
        String workflowXML,
        @WebParam(name = "steps", targetNamespace = "")
        List<String> steps);

    /**
     * 
     * @param bArray
     * @param fileName
     * @param issueKey
     * @param type
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAttachment", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.AddAttachment")
    @ResponseWrapper(localName = "addAttachmentResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.AddAttachmentResponse")
    public boolean addAttachment(
        @WebParam(name = "issueKey", targetNamespace = "")
        String issueKey,
        @WebParam(name = "bArray", targetNamespace = "")
        byte[] bArray,
        @WebParam(name = "fileName", targetNamespace = "")
        String fileName,
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @param attachmentId
     */
    @WebMethod
    @RequestWrapper(localName = "removeAttachment", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.RemoveAttachment")
    @ResponseWrapper(localName = "removeAttachmentResponse", targetNamespace = "pubflow.de", className = "de.pubflow.components.jiraConnector.wsArtifacts.RemoveAttachmentResponse")
    public void removeAttachment(
        @WebParam(name = "attachmentId", targetNamespace = "")
        long attachmentId);

}
